# javascript string

Created: December 23, 2023 9:04 AM
Class: Comp456
Reviewed: No

# JavaScript `string` methods

### String length

`length`

returns the length of a string

```jsx
let text = "I can"
let length = text.length;
console.log(length)
/*logs:
5
*/
```

### String Parts

`slice(start, end)`

extracts a part of a string and returns the extracted part in a new string.

parameters: start position, and end position (EP not included)

```jsx

let text = "I can only imagine"
let part = text.slice(0, 5);
console.log(part)
/*logs
The
*/
```

`substring(start, end)`

* the same as `slice(start, end)` except

*negative parameters are treated as 0*

extracts a part of a string and returns the extracted part in a new string.

parameters: start position, and end position (EP not included)

`substr(start, length)`

* the same as `slice(start, end)` except

the second parameter specifies the length of the extracted part

```jsx

let text = "I can only imagine"
let part = text.substr(0, 2);
console.log(part)
/*logs
Th
*/

//one parameter means from position to the rest of the string
let text = "I can only imagine"
let part2 = text.substr(5) 
console.log(part2)
/*logs:
only imagine
*/
```

### Replacing content

`replace()`

replaces a specified value with another value in a string

- doesnâ€™t change the string it is called on

```jsx

let text = "I can only imagine"
let newText = text.replace("can only", "can't");
console.log(newText)
/*logs
I can't imagine
*/

//to replace all matches we use /g flag
let text2 = "I can only imagine imagine"
let newText2 = text2.replace("imagine", "krill");
console.log(newText)
/*logs
I can only krill kril
*/

```

`replaceAll()`

replaces all specified values with another value in a string

```jsx
let text = "I can only imagine I can do it"
text = text.replaceAll("I", "he");
console.log(text)
/*logs
he can only imagine he can do it
*/
```

### Converting Case

`toUpperCase()`

```jsx
let text = "hello"
text = text.toUpperCase();
console.log(text)
/*logs
HELLO
*/
```

`toLowerCase()`

```jsx
let text = "Hello"
text = text.toLowerCase();
console.log(text)
/*logs
hello
*/
```

### Concatenation

`concat()`

joins two or more strings like the `+` operator

```jsx
let text1 = "hello"
let text2 = "world"
let text3 = text1.concat(" ", text2);
console.log(text3)
/*logs
hello world
*/
```

### Trimming

`trim()`

removes whitespace from both sides of string

```jsx
let text = "   hello world "
text = text.trim();
console.log(text)
/*logs
hello world
*/
```

`trimStart()`

* the same as `trim()`

!! only removes whitespace from the start of the string

```jsx
let text = "   hello world  "
text = text.trimStart();
console.log(text)
/*logs
hello world  
*/
```

`trimEnd()`

* the same as `trim()`

!! only removes whitespace from the end of the string

```jsx
let text = "   hello world  "
text = text.trimEnd();
console.log(text)
/*logs
   hello world
*/
```

### Searching

`indexOf()`

search and return the index of the first occurrence of argument

- if not found it will return `-1`

```jsx
let text = "I can only imagine"
position = text.indexOf("can");
console.log(position)
/*logs
H
*/
```

`lastIndexOf()`

search and return the index of the last occurrence of a mentioned character or substring within the string.

- if not found it will return `-1`

`charAt()`

returns the character that is located at the given position in the string

```jsx
let text = "I can only imagine"
char = text.charAt(i);
console.log(char)
/*logs
11
*/
```